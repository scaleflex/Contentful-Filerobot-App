"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.installToEnvironment = void 0;
const open_1 = __importDefault(require("open"));
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = __importDefault(require("inquirer"));
const constants_1 = require("../constants");
async function installToEnvironment(options) {
    let definitionId;
    if (options.definitionId) {
        definitionId = options.definitionId;
    }
    else if (process.env[constants_1.APP_DEF_ENV_KEY]) {
        definitionId = process.env[constants_1.APP_DEF_ENV_KEY];
    }
    else {
        const prompts = await inquirer_1.default.prompt([
            {
                name: 'definitionId',
                message: `The id of the app:`,
            },
        ]);
        definitionId = prompts.definitionId;
    }
    if (!definitionId) {
        console.log(`
        ${chalk_1.default.red('Error:')} There was no app-definition defined.

        Please add it with ${chalk_1.default.cyan('--definition-id=<app-definition-id>')}
        or set the environment variable ${chalk_1.default.cyan(`${constants_1.APP_DEF_ENV_KEY} = <app-definition-id>`)}
      `);
        throw new Error('No app-definition-id');
    }
    const host = options.host || constants_1.DEFAULT_CONTENTFUL_APP_HOST;
    const redirectUrl = `https://${host}/deeplink?link=apps`;
    try {
        (0, open_1.default)(`${redirectUrl}&id=${definitionId}`);
    }
    catch (err) {
        console.log(`${chalk_1.default.red('Error:')} Failed to open browser`);
        console.log(err.message);
        throw err;
    }
}
exports.installToEnvironment = installToEnvironment;
