import { Definition } from './definition-api';
import { Organization } from './organization-api';
import { ContentfulFunction, FunctionAppAction } from './types';
export declare const throwValidationException: (subject: string, message?: string, details?: string) => never;
export declare const isValidNetwork: (address: string) => boolean;
export declare const stripProtocol: (url: string) => string;
export declare const showCreationError: (subject: string, message: string) => void;
export declare const throwError: (err: Error, message: string) => never;
export declare const selectFromList: <T extends Definition | Organization>(list: T[], message: string, cachedOptionEnvVar: string) => Promise<T>;
type Entities<Type> = Type extends 'actions' ? Omit<FunctionAppAction, 'entryFile'>[] : Omit<ContentfulFunction, 'entryFile'>[];
export declare function getEntityFromManifest<Type extends 'actions' | 'functions'>(type: Type): Entities<Type> | undefined;
export {};
